#include <stdio.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include<crypt.h>
void error(char *msg)
{
  perror(msg);
      exit(1);
}
int main(int argc, char *argv[])
{
  int sockfd, newsockfd, portno, clilen;
  char buffer[256];
  /*  char *mesg;*/
  char *enc;
       struct sockaddr_in   serv_addr, cli_addr;
       int n;
       if (argc < 2) {
         fprintf(stderr,"ERROR, no port provided\n");
         exit(1);
       }
  void encrypt(char buffer[],int key)
 {
  unsigned int i;
 for(i=0;i<strlen(buffer);++i)
    {
       buffer[i] = buffer[i] - key;
 }
 }
  void decrypt(char buffer[],int key)
{
    unsigned int i;
     for(i=0;i<strlen(buffer);++i)
     {
 buffer[i] = buffer[i] + key;
}
 }
            sockfd = socket(AF_INET, SOCK_STREAM, 0);
            if (sockfd < 0)
              error("ERROR opening socket");
            bzero((char *) &serv_addr, sizeof(serv_addr));
            portno = atoi(argv[1]);
            serv_addr.sin_family = AF_INET;
            serv_addr.sin_addr.s_addr = INADDR_ANY;
            serv_addr.sin_port = htons(portno);
            if (bind(sockfd, (struct
                              sockaddr *) &serv_addr,
                     sizeof(serv_addr)) < 0)
              error("ERROR on binding");
            listen(sockfd,5);
                 clilen = sizeof(cli_addr);
                 newsockfd = accept(sockfd, (struct sockaddr *) &cli_addr, &clilen);
                 if (newsockfd < 0)

                   error("ERROR on accept");
                 bzero(buffer,256);
                 n = read(newsockfd,buffer,255);
                 /* n= read(newsockfd, mesg);*/
 if (n < 0) error("ERROR reading from socket");
printf("Here is the message: %s\n",buffer);
 encrypt(buffer,0xFACA);
printf("hi i am sending encrypted data: %s\n",buffer);
 /* printf("Here is the encrypted message %s \n ", mesg);*/
                 n = write(newsockfd,buffer,255);
                 printf("hi i am sending decrypted data %s \n", buffer);
                 decrypt(buffer,0xFACA);
                 n=write(newsockfd,buffer,255);
 if (n <  0) error("ERROR writing to socket");
                 return 0;
}
